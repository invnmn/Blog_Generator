{
  "version": 3,
  "sources": ["../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/webpack/universalModuleDefinition", "../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/webpack/bootstrap", "../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/webpack/runtime/define property getters", "../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/webpack/runtime/hasOwnProperty shorthand", "../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/webpack/runtime/make namespace object", "../../grapesjs-plugin-ckeditor/dist/webpack:/grapesjs-plugin-ckeditor/src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-plugin-ckeditor\"] = factory();\n\telse\n\t\troot[\"grapesjs-plugin-ckeditor\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import type { Plugin, CustomRTE } from 'grapesjs';\nimport type CKE from 'ckeditor4';\n\nexport type PluginOptions = {\n  /**\n   * CKEditor's configuration options.\n   * @see https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html\n   * @default {}\n   */\n  options?: CKE.config;\n\n  /**\n   * Pass CKEDITOR constructor or the CDN string from which the CKEDITOR will be loaded.\n   * If this option is empty, the plugin will also check the global scope (eg. window.CKEDITOR)\n   * @default 'https://cdn.ckeditor.com/4.21.0/standard-all/ckeditor.js'\n   */\n  ckeditor?: CKE.CKEditorStatic | string;\n\n  /**\n   * Position side of the toolbar.\n   * @default 'left'\n   */\n  position?: 'left' | 'center' | 'right';\n\n  /**\n   * Extend the default customRTE interface.\n   * @see https://grapesjs.com/docs/guides/Replace-Rich-Text-Editor.html\n   * @default {}\n   * @example\n   * customRte: { parseContent: true, ... },\n   */\n  customRte?: Partial<CustomRTE>;\n\n  /**\n   * Customize CKEditor toolbar element once created.\n   * @example\n   * onToolbar: (el) => {\n   *  el.style.minWidth = '350px';\n   * }\n   */\n  onToolbar?: (toolbar: HTMLElement) => void;\n};\n\nconst isString = (value: any): value is string => typeof value === 'string';\n\nconst loadFromCDN = (url: string) => {\n  const scr = document.createElement('script');\n  scr.src = url;\n  document.head.appendChild(scr);\n  return scr;\n}\n\nconst forEach = <T extends HTMLElement = HTMLElement>(items: Iterable<T>, clb: (item: T) => void) => {\n  [].forEach.call(items, clb);\n}\n\nconst stopPropagation = (ev: Event) => ev.stopPropagation();\n\nconst plugin: Plugin<PluginOptions> = (editor, options = {}) => {\n  const opts: Required<PluginOptions> = {\n    options: {},\n    customRte: {},\n    position: 'left',\n    ckeditor: 'https://cdn.ckeditor.com/4.21.0/standard-all/ckeditor.js',\n    onToolbar: () => {},\n    ...options,\n  };\n\n  let ck: CKE.CKEditorStatic | undefined;\n  const { ckeditor } = opts;\n  const hasWindow = typeof window !== 'undefined';\n  let dynamicLoad = false;\n\n  // Check and load CKEDITOR constructor\n  if (ckeditor) {\n    if (isString(ckeditor)) {\n      if (hasWindow) {\n        dynamicLoad = true;\n        const scriptEl = loadFromCDN(ckeditor);\n        scriptEl.onload = () => {\n          ck = window.CKEDITOR;\n        }\n      }\n    } else if (ckeditor.inline!) {\n      ck = ckeditor;\n    }\n  } else if (hasWindow) {\n    ck = window.CKEDITOR;\n  }\n\n  const updateEditorToolbars = () => setTimeout(() => editor.refresh(), 0);\n  const logCkError = () => {\n    editor.log('CKEDITOR instance not found', { level: 'error' })\n  };\n\n  if (!ck && !dynamicLoad) {\n    return logCkError();\n  }\n\n  const focus = (el: HTMLElement, rte?: CKE.editor) => {\n    if (rte?.focusManager?.hasFocus) return;\n    el.contentEditable = 'true';\n    rte?.focus();\n    updateEditorToolbars();\n  };\n\n\n  editor.setCustomRte({\n    getContent(el, rte: CKE.editor) {\n      return rte.getData();\n    },\n\n    enable(el, rte?: CKE.editor) {\n      // If already exists I'll just focus on it\n      if(rte && rte.status != 'destroyed') {\n        focus(el, rte);\n        return rte;\n      }\n\n      if (!ck) {\n        logCkError();\n        return;\n      }\n\n      // Seems like 'sharedspace' plugin doesn't work exactly as expected\n      // so will help hiding other toolbars already created\n      const rteToolbar = editor.RichTextEditor.getToolbarEl();\n      forEach(rteToolbar.children as Iterable<HTMLElement>, (child) => {\n        child.style.display = 'none';\n      });\n\n      // Check for the mandatory options\n      const ckOptions = { ...opts.options };\n      const plgName = 'sharedspace';\n\n      if (ckOptions.extraPlugins) {\n        if (typeof ckOptions.extraPlugins === 'string') {\n          ckOptions.extraPlugins += `,${plgName}`;\n        } else if (Array.isArray(ckOptions.extraPlugins)) {\n          (ckOptions.extraPlugins as string[]).push(plgName);\n        }\n      } else {\n        ckOptions.extraPlugins = plgName;\n      }\n\n      if(!ckOptions.sharedSpaces) {\n        ckOptions.sharedSpaces = { top: rteToolbar };\n      }\n\n      // Init CKEDITOR\n      rte = ck!.inline(el, ckOptions);\n\n      // Make click event propogate\n      rte.on('contentDom', () => {\n        const editable = rte!.editable();\n        editable.attachListener(editable, 'click', () => el.click());\n      });\n\n      // The toolbar is not immediatly loaded so will be wrong positioned.\n      // With this trick we trigger an event which updates the toolbar position\n      rte.on('instanceReady', () => {\n        const toolbar = rteToolbar.querySelector<HTMLElement>(`#cke_${rte!.name}`);\n        if (toolbar) {\n          toolbar.style.display = 'block';\n          opts.onToolbar(toolbar);\n        }\n        // Update toolbar position\n        editor.refresh();\n        // Update the position again as the toolbar dimension might have a new changed\n        updateEditorToolbars();\n      });\n\n      // Prevent blur when some of CKEditor's element is clicked\n      rte.on('dialogShow', () => {\n        const els = document.querySelectorAll<HTMLElement>('.cke_dialog_background_cover, .cke_dialog_container');\n        forEach(els, (child) => {\n          child.removeEventListener('mousedown', stopPropagation);\n          child.addEventListener('mousedown', stopPropagation);\n        });\n      });\n\n      // On ENTER CKEditor doesn't trigger `input` event\n      rte.on('key', (ev: any) => {\n        ev.data.keyCode === 13 && updateEditorToolbars();\n      });\n\n      focus(el, rte);\n\n      return rte;\n    },\n\n    disable(el, rte?: CKE.editor) {\n      el.contentEditable = 'false';\n      rte?.focusManager?.blur(true);\n    },\n\n    ...opts.customRte,\n  });\n\n  // Update RTE toolbar position\n  editor.on('rteToolbarPosUpdate', (pos: any) => {\n    const { elRect } = pos;\n\n    switch (opts.position) {\n      case 'center':\n        pos.left = (elRect.width / 2) - (pos.targetWidth / 2);\n        break;\n      case 'right':\n        pos.left = ''\n        pos.right = 0;\n        break;\n    }\n  });\n};\n\nexport default plugin;\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "e", "t", "n", "r", "forEach", "items", "clb", "stopPropagation", "ev", "editor", "options", "ck", "url", "scr", "opts", "customRte", "position", "ckeditor", "onToolbar", "hasWindow", "dynamicLoad", "document", "createElement", "src", "head", "appendChild", "onload", "CKEDITOR", "inline", "updateEditorToolbars", "setTimeout", "refresh", "logCkError", "log", "level", "focus", "el", "rte", "focusManager", "hasFocus", "contentEditable", "setCustomRte", "getContent", "getData", "enable", "status", "rteToolbar", "RichTextEditor", "getToolbarEl", "children", "child", "style", "display", "ckOptions", "plgName", "extraPlugins", "Array", "isArray", "push", "sharedSpaces", "top", "on", "editable", "attachListener", "click", "toolbar", "querySelector", "name", "els", "querySelectorAll", "removeEventListener", "addEventListener", "data", "keyCode", "disable", "blur", "pos", "elRect", "left", "width", "targetWidth", "right"]
}
